{"date":"2017-03-31T22:01:03+08:00","html":"\u003cp\u003eTiUP产品支持 OAuth 2.0 协议的授权访问。关于 OAuth 2.0 协议规范，请参考\u003ca href=\"http://oauth.net/2/\"\u003e这里\u003c/a\u003e。TiUP支持三种 OAuth 2.0 的授权流程：\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eWEB应用的授权流程\u003c/li\u003e\n\u003cli\u003e移动客户端应用、桌面客户端应用的授权流程\u003c/li\u003e\n\u003cli\u003e服务器端与用户无关的直接调用\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"快速介绍\"\u003e快速介绍\u003c/h2\u003e\n\n\u003cp\u003e使用 OAuth 2.0 的流程可以简单概括为：\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e应用向TiUP请求授权。\u003c/li\u003e\n\u003cli\u003eTiUP为用户显示一个授权页面，用户在此页面确认是否同意应用的请求。\u003c/li\u003e\n\u003cli\u003e如果用户同意授权，应用会获取到一个访问令牌(access_token)，通过此令牌，应用可以访问授权用户的数据。\u003c/li\u003e\n\u003cli\u003e如果访问需要授权的 API，请使用 HTTPS 协议，加上 access_token 的 Header。\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"使用场景\"\u003e使用场景\u003c/h2\u003e\n\n\u003cp\u003e这篇文章就三个主要的使用场景做下介绍。\u003c/p\u003e\n\n\u003ch3 id=\"web应用\"\u003eWEB应用\u003c/h3\u003e\n\n\u003cp\u003eWEB应用需通过用户登录身份进行授权，授权流程图如下：\n\u003cdiv class=\"image-package\"\u003e\u003cimg src=\"https://timgsa.baidu.com/timg?image\u0026quality=80\u0026size=b9999_10000\u0026sec=1486445556128\u0026di=cc8381db41048d42fb2316b05b7cfafb\u0026imgtype=0\u0026src=http%3A%2F%2Fimg.c6c.com%2Fuploads%2Fallimg%2F1504%2F29%2F113301F38-1.png\" alt=\"logo\" title=\"无印良品LOGO\"/\u003e\u003cdiv class=\"caption\"\u003e无印良品LOGO\u003c/div\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003ch4 id=\"1-客户端调用获取-authorization-code-的-api\"\u003e(1) 客户端调用获取 Authorization Code 的 API\u003c/h4\u003e\n\n\u003cul\u003e\n\u003cli\u003e网址:\n\u003ccode\u003ehttp://auth_host/oauth2/authorize\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e方法：\n\u003ccode\u003e浏览器端GET访问\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e请求参数:\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth align=\"center\"\u003e参数名称\u003c/th\u003e\n\u003cth align=\"center\"\u003e参数类型\u003c/th\u003e\n\u003cth align=\"center\"\u003e是否必须\u003c/th\u003e\n\u003cth align=\"left\"\u003e描述\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd align=\"center\"\u003eclient_id\u003c/td\u003e\n\u003ctd align=\"center\"\u003etext\u003c/td\u003e\n\u003ctd align=\"center\"\u003e是\u003c/td\u003e\n\u003ctd align=\"left\"\u003e申请的 client id\u003c/td\u003e\n\u003c/tr\u003e\n\n\u003ctr\u003e\n\u003ctd align=\"center\"\u003eresponse_type\u003c/td\u003e\n\u003ctd align=\"center\"\u003etext\u003c/td\u003e\n\u003ctd align=\"center\"\u003e是\u003c/td\u003e\n\u003ctd align=\"left\"\u003e固定为：code\u003c/td\u003e\n\u003c/tr\u003e\n\n\u003ctr\u003e\n\u003ctd align=\"center\"\u003escope\u003c/td\u003e\n\u003ctd align=\"center\"\u003etext\u003c/td\u003e\n\u003ctd align=\"center\"\u003e是\u003c/td\u003e\n\u003ctd align=\"left\"\u003e申请token权限\u003c/td\u003e\n\u003c/tr\u003e\n\n\u003ctr\u003e\n\u003ctd align=\"center\"\u003eredirect_uri\u003c/td\u003e\n\u003ctd align=\"center\"\u003etext\u003c/td\u003e\n\u003ctd align=\"center\"\u003e是\u003c/td\u003e\n\u003ctd align=\"left\"\u003e成功授权后的回调地址\u003c/td\u003e\n\u003c/tr\u003e\n\n\u003ctr\u003e\n\u003ctd align=\"center\"\u003estate\u003c/td\u003e\n\u003ctd align=\"center\"\u003etext\u003c/td\u003e\n\u003ctd align=\"center\"\u003e否\u003c/td\u003e\n\u003ctd align=\"left\"\u003eclient端的状态码。\u003c/td\u003e\n\u003c/tr\u003e\n\n\u003ctr\u003e\n\u003ctd align=\"center\"\u003eaccess_type\u003c/td\u003e\n\u003ctd align=\"center\"\u003etext\u003c/td\u003e\n\u003ctd align=\"center\"\u003e否\u003c/td\u003e\n\u003ctd align=\"left\"\u003e一般情况下web应用不需要这个参数，\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cul\u003e\n\u003cli\u003e请求示例：\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cpre\u003e\u003ccode\u003e  http://auth_host/oauth2/authorize?client_id=some_client_id\u0026amp;response_type=code\u0026amp;scope=userinfo\u0026amp;redirect_uri=http://www.exmaple.com/back\u0026amp;state=somestate\u0026amp;school_code=ruc\u0026amp;theme=schools\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cul\u003e\n\u003cli\u003e返回结果：\u003c/li\u003e\n\u003cli\u003e当用户拒绝授权时，浏览器会重定向到 redirect_uri，并附加错误信息.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cpre\u003e\u003ccode\u003e  https://www.example.com/back?error=access_denied\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cul\u003e\n\u003cli\u003e当用户同意授权时，浏览器会重定向到 redirect_uri，并附加 autorization_code.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cpre\u003e\u003ccode\u003e  https://www.example.com/back?code=13425244\u0026amp;state=somestate\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003e\u003cdiv class=\"image-package\"\u003e\u003cimg src=\"http://img.yixieshi.com/134S0A27-0.png!680?imageView2/2/w/659/h/494/interlace/1\" alt=\"\" title=\"示例图片\"/\u003e\u003cdiv class=\"caption\"\u003e示例图片\u003c/div\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003ch4 id=\"2-服务器端获取-access-token\"\u003e(2) 服务器端获取 Access Token\u003c/h4\u003e\n\n\u003cul\u003e\n\u003cli\u003e网址:\n\u003ccode\u003ehttps://auth_host/oauth2/token\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e方法：\n\u003ccode\u003ePOST\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e请求参数: \u003ccode\u003eContent-Type: application/x-www-form-urlencoded\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth align=\"left\"\u003e参数名称\u003c/th\u003e\n\u003cth align=\"left\"\u003e参数类型\u003c/th\u003e\n\u003cth align=\"left\"\u003e是否必须\u003c/th\u003e\n\u003cth align=\"left\"\u003e描述\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003eclient_id\u003c/td\u003e\n\u003ctd align=\"left\"\u003etext\u003c/td\u003e\n\u003ctd align=\"left\"\u003e是\u003c/td\u003e\n\u003ctd align=\"left\"\u003e申请的 client_id\u003c/td\u003e\n\u003c/tr\u003e\n\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003eclient_secret\u003c/td\u003e\n\u003ctd align=\"left\"\u003etext\u003c/td\u003e\n\u003ctd align=\"left\"\u003e是\u003c/td\u003e\n\u003ctd align=\"left\"\u003e申请的 client_secret\u003c/td\u003e\n\u003c/tr\u003e\n\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003egrant_type\u003c/td\u003e\n\u003ctd align=\"left\"\u003etext\u003c/td\u003e\n\u003ctd align=\"left\"\u003e是\u003c/td\u003e\n\u003ctd align=\"left\"\u003e在本流程中，此值为 authorization_code\u003c/td\u003e\n\u003c/tr\u003e\n\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003ecode\u003c/td\u003e\n\u003ctd align=\"left\"\u003etext\u003c/td\u003e\n\u003ctd align=\"left\"\u003e是\u003c/td\u003e\n\u003ctd align=\"left\"\u003e上一步中获得的 authorization_code\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cul\u003e\n\u003cli\u003e请求示例（cURL）：\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cpre\u003e\u003ccode\u003e  curl -v -u \u0026lt;client_id\u0026gt;:\u0026lt;client_serent\u0026gt; \n     -d \u0026quot;grant_type=authorization_code\u0026quot; \n     -d \u0026quot;code=\u0026lt;authorization_code\u0026gt;\u0026quot; \n   'http://auth_host/oauth2/token'\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cul\u003e\n\u003cli\u003e返回结果：\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cpre\u003e\u003ccode\u003e  {\n    \u0026quot;access_token\u0026quot;:\u0026quot;a14afef0f66fcffce3e0fcd2e34f6ff4\u0026quot;,\n    \u0026quot;expires_in\u0026quot;:3600,\n    \u0026quot;uid\u0026quot;:\u0026quot;sds4fsa23243jf3da\u0026quot;,,\n    \u0026quot;token_type\u0026quot;:\u0026quot;Bearer\u0026quot;\n  }\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cul\u003e\n\u003cli\u003e使用AccessToken：\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cpre\u003e\u003ccode\u003e  curl \u0026quot;https://auth_host/oauth2/v1/userinfo\u0026quot; -H \u0026quot;Authorization: Bearer a14afef0f66fcffce3e0fcd2e34f6ff4\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch3 id=\"移动和桌面端应用\"\u003e移动和桌面端应用\u003c/h3\u003e\n\n\u003cp\u003e移动和桌面端授权和WEB应用授权流程基本相同，需要通过两步来获取 access_token, 不同的是redirect_uri的scheme根据情况修改为应用的scheme， 以通过应用接收回调参数，例如您的redirect_uri可能需要由\u003ccode\u003ehttp://example.com/back\u003c/code\u003e变成\u003ccode\u003eexample://back\u003c/code\u003e如果有必要，这类应用的access_type参数值为offline， 便于在token过期后，刷新token, 关于具体调用流程请参考上一节内容。\u003c/p\u003e\n\n\u003ch3 id=\"服务器端授权\"\u003e服务器端授权\u003c/h3\u003e\n\n\u003cp\u003eTiUP学校内部管理员用户，支持从服务器端端直接获取公有数据和用户部分数据，而不需要用户授权，例如：获取学校部门列表，获取用户学工号，修改班级名称等操作， 这类用户需要预先在【我的应用-\u0026gt;服务器端】申请需要调用的scope，然后获取access_token, 获取方法如下：\u003c/p\u003e\n\n\u003ch4 id=\"1-服务器端直接获取accesstoken\"\u003e(1) 服务器端直接获取AccessToken\u003c/h4\u003e\n\n\u003cul\u003e\n\u003cli\u003e网址: \u003ccode\u003ehttps://auth_host/oauth2/token\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e方法：\u003ccode\u003ePOST\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e请求参数:\u003ccode\u003eContent-Type: application/x-www-form-urlencoded\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth align=\"left\"\u003e参数名称\u003c/th\u003e\n\u003cth align=\"left\"\u003e参数类型\u003c/th\u003e\n\u003cth align=\"left\"\u003e是否必须\u003c/th\u003e\n\u003cth align=\"left\"\u003e描述\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003eclient_id\u003c/td\u003e\n\u003ctd align=\"left\"\u003etext\u003c/td\u003e\n\u003ctd align=\"left\"\u003e是\u003c/td\u003e\n\u003ctd align=\"left\"\u003e申请的 client_id\u003c/td\u003e\n\u003c/tr\u003e\n\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003eclient_secret\u003c/td\u003e\n\u003ctd align=\"left\"\u003etext\u003c/td\u003e\n\u003ctd align=\"left\"\u003e是\u003c/td\u003e\n\u003ctd align=\"left\"\u003e申请的 client_secret\u003c/td\u003e\n\u003c/tr\u003e\n\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003egrant_type\u003c/td\u003e\n\u003ctd align=\"left\"\u003etext\u003c/td\u003e\n\u003ctd align=\"left\"\u003e是\u003c/td\u003e\n\u003ctd align=\"left\"\u003e在本流程中，此值为 client_credentials\u003c/td\u003e\n\u003c/tr\u003e\n\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003escope\u003c/td\u003e\n\u003ctd align=\"left\"\u003etext\u003c/td\u003e\n\u003ctd align=\"left\"\u003e否\u003c/td\u003e\n\u003ctd align=\"left\"\u003e申请token权限，此。\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cul\u003e\n\u003cli\u003e请求示例（cURL）：\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cpre\u003e\u003ccode\u003ecurl -v -u \u0026lt;client_id\u0026gt;:\u0026lt;client_serent\u0026gt; \\\n   -d \u0026quot;grant_type=authorization_code\u0026quot; \\\n   -d \u0026quot;scope=\u0026lt;login\u0026gt;\u0026quot; \\\n 'http://auth_host/oauth2/token'\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cul\u003e\n\u003cli\u003e返回结果：\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cpre\u003e\u003ccode\u003e{\n\u0026quot;access_token\u0026quot;:\u0026quot;a14afef0f66fcffce3e0fcd2e34f6ff4\u0026quot;,\n\u0026quot;refresh_token\u0026quot;:\u0026quot;3e0fcd2e34f6ff4a14afef0f66fcffce\u0026quot;,\n\u0026quot;expires_in\u0026quot;:13600,\n\u0026quot;uid\u0026quot;:\u0026quot;sds4fsa23243jf3da\u0026quot;,,\n\u0026quot;token_type\u0026quot;:\u0026quot;Bearer\u0026quot;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cul\u003e\n\u003cli\u003e使用AccessToken：\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cpre\u003e\u003ccode\u003e  curl \u0026quot;https://apis_host/tiup/v1/schools\u0026quot; -H \u0026quot;Authorization: Bearer a14afef0f66fcffce3e0fcd2e34f6ff4\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2 id=\"token-过期制\"\u003eToken 过期制\u003c/h2\u003e\n\n\u003cp\u003e在 OAuth 2.0 中，access_token 不是长期有效的。在授权获取 access_token 时会一并返回其有效期，也就是返回值中的 expires_in 参数，默认为3600秒。在 access_token 使用过程中，如果服务器返回401错误：“unauthorized”，此时，说明 access_token 已经过期，除了通过再次引导用户进行授权来获取 access_token 外，如果您的token返回值中包含refresh_token， 则可以通过 refresh_token 的方式来换取新的 access_token 和 refresh_token。\u003c/p\u003e\n\n\u003ch4 id=\"1-通过-refresh-token-换取-access-token-方法如下\"\u003e（1）通过 refresh_token 换取 access_token 方法如下：\u003c/h4\u003e\n\n\u003cul\u003e\n\u003cli\u003e网址:\n\u003ccode\u003ehttps://auth_host/oauth2/token\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e方法：\n\u003ccode\u003ePOST\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e请求参数:\u003ccode\u003eContent-Type: application/x-www-form-urlencoded\u003c/code\u003e\n\u003cbr\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth align=\"left\"\u003e参数名称\u003c/th\u003e\n\u003cth align=\"left\"\u003e参数类型\u003c/th\u003e\n\u003cth align=\"left\"\u003e是否必须\u003c/th\u003e\n\u003cth align=\"left\"\u003e描述\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003eclient_id\u003c/td\u003e\n\u003ctd align=\"left\"\u003etext\u003c/td\u003e\n\u003ctd align=\"left\"\u003e是\u003c/td\u003e\n\u003ctd align=\"left\"\u003e申请的 client_id\u003c/td\u003e\n\u003c/tr\u003e\n\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003eclient_secret\u003c/td\u003e\n\u003ctd align=\"left\"\u003etext\u003c/td\u003e\n\u003ctd align=\"left\"\u003e是\u003c/td\u003e\n\u003ctd align=\"left\"\u003e申请的 client_secret\u003c/td\u003e\n\u003c/tr\u003e\n\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003egrant_type\u003c/td\u003e\n\u003ctd align=\"left\"\u003etext\u003c/td\u003e\n\u003ctd align=\"left\"\u003e是\u003c/td\u003e\n\u003ctd align=\"left\"\u003e在本流程中，此值为 refresh_token\u003c/td\u003e\n\u003c/tr\u003e\n\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003erefresh_token\u003c/td\u003e\n\u003ctd align=\"left\"\u003etext\u003c/td\u003e\n\u003ctd align=\"left\"\u003e是\u003c/td\u003e\n\u003ctd align=\"left\"\u003e刷新令牌\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cul\u003e\n\u003cli\u003e请求示例（cURL）：\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cpre\u003e\u003ccode\u003e  curl -v -u \u0026lt;client_id\u0026gt;:\u0026lt;client_serent\u0026gt; \\\n   -d \u0026quot;grant_type=refresh_token\u0026quot; \\\n   -d \u0026quot;refresh_token=\u0026lt;0f66fcffce3e0fcd2e34f6ff4a14afef\u0026gt;\u0026quot; \\\n 'http://auth_host/oauth2/token'\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cul\u003e\n\u003cli\u003e返回结果:\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cpre\u003e\u003ccode\u003e{\n    \u0026quot;access_token\u0026quot;:\u0026quot;a14afef0f66fcffce3e0fcd2e34f6ff4\u0026quot;,\n    \u0026quot;refresh_token\u0026quot;:\u0026quot;3e0fcd2e34f6ff4a14afef0f66fcffce\u0026quot;,\n    \u0026quot;expires_in\u0026quot;:3600,\n    \u0026quot;uid\u0026quot;:\u0026quot;sds4fsa23243jf3da\u0026quot;,,\n    \u0026quot;token_type\u0026quot;:\u0026quot;Bearer\u0026quot;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e默认情况下，客户端授权access_token 过期时间为1小时，服务器端授权access_token过期时间为7天，refresh_token 过期时间为30天。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2 id=\"api访问频率控制\"\u003eAPI访问频率控制\u003c/h2\u003e\n\n\u003cp\u003e为了维护服务器的稳定性和防止恶意使用，您需要对授权的 API 访问频率控制。如果服务器返回HTTP状态码为429, 错误：“too many requests”时说明您的接口已经超过了访问频率限制，针对接口访问频率控制细节如下：\u003c/p\u003e\n\n\u003cp\u003e针对用户授权单IP，单个接口的方法限制如下：\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth align=\"left\"\u003e级别\u003c/th\u003e\n\u003cth align=\"left\"\u003e限制\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003eL1\u003c/td\u003e\n\u003ctd align=\"left\"\u003e3000次/小时\u003c/td\u003e\n\u003c/tr\u003e\n\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003eL2\u003c/td\u003e\n\u003ctd align=\"left\"\u003e8000次/小时\u003c/td\u003e\n\u003c/tr\u003e\n\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003eL3\u003c/td\u003e\n\u003ctd align=\"left\"\u003e20000次/小时\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003e针对服务器授权每个应用每个scope的访问限制如下：\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth align=\"left\"\u003e级别\u003c/th\u003e\n\u003cth align=\"left\"\u003e限制\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003eL1\u003c/td\u003e\n\u003ctd align=\"left\"\u003e3000次/小时\u003c/td\u003e\n\u003c/tr\u003e\n\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003eL2\u003c/td\u003e\n\u003ctd align=\"left\"\u003e8000次/小时\u003c/td\u003e\n\u003c/tr\u003e\n\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003eL3\u003c/td\u003e\n\u003ctd align=\"left\"\u003e20000次/小时\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003e用户每次通过access token 请求API时，返回结果的 header 里会有当前访问限制信息\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth align=\"left\"\u003eHEADER名称\u003c/th\u003e\n\u003cth align=\"left\"\u003e含义\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003eX-Ratelimit-Limit\u003c/td\u003e\n\u003ctd align=\"left\"\u003e单用户每小时次数\u003c/td\u003e\n\u003c/tr\u003e\n\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003eX-RateLimit-Remaining\u003c/td\u003e\n\u003ctd align=\"left\"\u003e单用户每小时剩余次数\u003c/td\u003e\n\u003c/tr\u003e\n\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003eX-RateLimit-Reset\u003c/td\u003e\n\u003ctd align=\"left\"\u003e当前速率限制窗口复位的时间。单位是（UTC epoch seconds）\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch2 id=\"客户端sdk\"\u003e客户端SDK\u003c/h2\u003e\n\n\u003cp\u003e以下客户端库与流行的框架集成，这使得实现OAuth 2.0更简单。 随着时间的推移，会有更多的功能添加到SDK中。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/tiup/oauth_sso\"\u003eTiUP Oauth2 SSO Client Server Side\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/tiup/oauth_sso\"\u003eTiUP Oauth2 Client Demo for Java\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/tiup/oauth_sso\"\u003eTiUP Oauth2 Client for C#\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n","location":"代码/oauth 2.0","title":"使用 OAuth 2.0 访问创新盟校 API\n"}